---

- hosts: borgbackup
  become: yes
  gather_facts: yes
  roles:
          - role: collect_ssh_keys
            #the user for backup jobs running, should be the same as backup_client_user
            ssh_user: "root"


- hosts: backupserver
  become: yes
  gather_facts: yes
  roles:
          - role: authorize_ssh_keys
            ssh_keys: "{{ groups['borgbackup'] | map('extract', hostvars, ['ssh_public_key']) | list }}"
            #the user for communicate with backup server, should be the same as backup_server_user
            ssh_user: "borg"
            ssh_key_options: 'command="borg serve --restrict-to-path /borg/repos",no-pty,no-agent-forwarding,no-port-forwarding,no-X11-forwarding,no-user-rc'


- hosts: borgbackup
  become: yes
  gather_facts: yes

  roles:
          - role: setup_borg_client
            backup_client_user: "root"
            backup_server: "backupserver.dom.local"
            backup_server_user: "borg"
            backup_repos_path: "/borg/repos"
            #backup_repository: "general_repo"          # define if you want one repo for hosts
            backup_emailto: "ops@dom.local"             # notify recipient
            backup_emailfrom: "noreply@dom.local"       # from address
            remove_crontab_jobs: false                  # remove all borg jobs before adding new
            backup_server_key: ""                       # can be found by ssh-keyscan -t rsa backupserver


